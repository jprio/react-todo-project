{"version":3,"sources":["functionBased/components/TodoItem.module.css","functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/components/TodoItem.js","functionBased/components/TodosList.js","functionBased/components/TodoContainer.js","index.js"],"names":["module","exports","Header","style","fontSize","fontWeight","marginBottom","lineHeight","color","textTransform","textAlign","InputTodo","props","useState","title","inputText","setInputText","onSubmit","e","preventDefault","trim","addTodoProps","alert","className","type","placeholder","value","name","onChange","target","completedStyle","fontStyle","opacity","textDecoration","TodosItem","state","editing","handleUpdatedDone","event","key","setState","handleEditing","console","log","editMode","this","display","styles","item","onDoubleClick","checked","todo","completed","handleChangeProps","id","textInput","setUpdate","onKeyDown","onClick","deleteTodoProps","React","Component","TodosList","todos","map","TodoItem","TodoContainer","handleChange","prevState","delTodo","filter","addTodoItem","newTodo","uuidv4","updatedTitle","fetch","then","response","json","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,UAAY,8B,2KCoBnFC,EAnBA,WACX,OACI,iCACI,oBACIC,MAAO,CACHC,SAAU,OACVC,WAAY,MACZC,aAAc,OACdC,WAAY,MACZC,MAAO,UACPC,cAAe,YACfC,UAAW,UARnB,sB,gBCoCGC,EAvCG,SAAAC,GACd,MAAkCC,mBAAS,CACvCC,MAAO,KADX,mBAAOC,EAAP,KAAkBC,EAAlB,KAuBA,OACI,uBAAMC,SAbW,SAAAC,GACjBA,EAAEC,iBACEJ,EAAUD,MAAMM,QAChBR,EAAMS,aAAaN,EAAUD,OAC7BE,EAAa,CACTF,MAAO,MAGXQ,MAAM,sBAKoBC,UAAU,iBAAxC,UACI,uBACIC,KAAK,OACLD,UAAU,aACVE,YAAY,cACZC,MAAOX,EAAUD,MACjBa,KAAK,QACLC,SA3BK,SAAAV,GACbF,EAAa,2BACND,GADK,kBAEPG,EAAEW,OAAOF,KAAOT,EAAEW,OAAOH,YA0B1B,wBAAQH,UAAU,eAAlB,wB,iBClCNO,EAAiB,CACnBC,UAAW,SACXvB,MAAO,UACPwB,QAAS,GACTC,eAAgB,gBAGdC,E,4MACFC,MAAQ,CACJC,SAAS,G,EAEbC,kBAAoB,SAAAC,GACE,UAAdA,EAAMC,KACN,EAAKC,SAAS,CAAEJ,SAAS,K,EAgDjCK,cAAgB,WACZ,EAAKD,SAAS,CACVJ,SAAS,IAEbM,QAAQC,IAAI,O,uDAjDhB,WACID,QAAQC,IAAI,e,oBAEhB,WAAU,IAAD,OAYDC,EAAW,GAOf,OALIC,KAAKV,MAAMC,UAGXQ,EAASE,QAAU,QAGnB,oBAAIvB,UAAWwB,IAAOC,KAAtB,SACI,sBAAKC,cAAeJ,KAAKJ,cAAzB,UACI,uBAAOjB,KAAK,WAAW0B,QAASL,KAAKjC,MAAMuC,KAAKC,UAC5CxB,SAAU,kBAAM,EAAKhB,MAAMyC,kBAAkB,EAAKzC,MAAMuC,KAAKG,OAEjE,uBACI9B,KAAK,OACLrB,MAAOyC,EACPrB,UAAWwB,IAAOQ,UAClB7B,MAAOmB,KAAKjC,MAAMuC,KAAKrC,MACvBc,SAAU,SAAAV,GACN,EAAKN,MAAM4C,UAAUtC,EAAEW,OAAOH,MAAO,EAAKd,MAAMuC,KAAKG,KAEzDG,UAAWZ,KAAKR,oBAEpB,sBAAMlC,MAAO0C,KAAKjC,MAAMuC,KAAKC,UAAYtB,EAAiB,KAA1D,SACKe,KAAKjC,MAAMuC,KAAKrC,QAErB,wBAAQ4C,QAAS,kBAAM,EAAK9C,MAAM+C,gBAAgB,EAAK/C,MAAMuC,KAAKG,KAAlE,6B,GAlDIM,IAAMC,WA6Df3B,ICnET4B,E,4JAEF,WAAU,IAAD,OACL,OACI,6BACKjB,KAAKjC,MAAMmD,MAAMC,KAAI,SAAAb,GAAI,OACtB,cAACc,EAAD,CACId,KAAMA,EACNE,kBAAmB,EAAKzC,MAAMyC,kBAC9BM,gBAAiB,EAAK/C,MAAM+C,gBAC5BH,UAAW,EAAK5C,MAAM4C,WAJXL,EAAKG,a,GANhBM,IAAMC,WAiBfC,ICdTI,E,4MACF/B,MAAQ,CACJ4B,MAAO,I,EAGXI,aAAe,SAACb,GACZ,EAAKd,UAAS,SAAA4B,GAAS,MAAK,CACxBL,MAAOK,EAAUL,MAAMC,KAAI,SAAAb,GACvB,OAAIA,EAAKG,KAAOA,EACL,2BACAH,GADP,IAEIC,WAAYD,EAAKC,YAGlBD,U,EAInBkB,QAAU,SAAAf,GACN,EAAKd,SAAS,CACVuB,MAAM,YACC,EAAK5B,MAAM4B,MAAMO,QAAO,SAAAnB,GACvB,OAAOA,EAAKG,KAAOA,S,EAKnCiB,YAAc,SAAAzD,GACV,IAAM0D,EAAU,CACZlB,GAAImB,cACJ3D,MAAOA,EACPsC,WAAW,GAEf,EAAKZ,SAAS,CACVuB,MAAM,GAAD,mBAAM,EAAK5B,MAAM4B,OAAjB,CAAwBS,O,EAGrChB,UAAY,SAACkB,EAAcpB,GACvB,EAAKd,SAAS,CACVuB,MAAO,EAAK5B,MAAM4B,MAAMC,KAAI,SAAAb,GAIxB,OAHIA,EAAKG,KAAOA,IACZH,EAAKrC,MAAQ4D,GAEVvB,Q,uDAInB,WAAqB,IAAD,OAChBwB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAI,OAAI,EAAKvC,SAAS,CAAEuB,MAAOgB,S,oBAE7C,WACI,OACI,qBAAKxD,UAAU,YAAf,SACI,sBAAKA,UAAU,QAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWF,aAAcwB,KAAK0B,cAC9B,cAAC,EAAD,CACIR,MAAOlB,KAAKV,MAAM4B,MAClBV,kBAAmBR,KAAKsB,aACxBR,gBAAiBd,KAAKwB,QACtBb,UAAWX,KAAKW,qB,GA/DZI,IAAMC,WAsEnBK,ICrEfc,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,W","file":"static/js/main.5de9c39f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3MbaD\",\"checkbox\":\"TodoItem_checkbox__2Jrs8\",\"textInput\":\"TodoItem_textInput__t35cu\"};","import React from \"react\"\n\nconst Header = () => {\n    return (\n        <header>\n            <h1\n                style={{\n                    fontSize: \"6rem\",\n                    fontWeight: \"600\",\n                    marginBottom: \"2rem\",\n                    lineHeight: \"1em\",\n                    color: \"#ececec\",\n                    textTransform: \"lowercase\",\n                    textAlign: \"center\",\n                }}\n            >\n                todos\n            </h1>\n        </header>)\n}\n\nexport default Header","import React, { useState } from \"react\"\n\nconst InputTodo = props => {\n    const [inputText, setInputText] = useState({\n        title: \"\",\n    })\n\n    const onChange = e => {\n        setInputText({\n            ...inputText,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (inputText.title.trim()) {\n            props.addTodoProps(inputText.title)\n            setInputText({\n                title: \"\",\n            })\n        } else {\n            alert(\"Please write item\")\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"form-container\">\n            <input\n                type=\"text\"\n                className=\"input-text\"\n                placeholder=\"Add todo...\"\n                value={inputText.title}\n                name=\"title\"\n                onChange={onChange}\n            />\n            <button className=\"input-submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default InputTodo","import React from \"react\";\nimport styles from \"./TodoItem.module.css\";\nconst completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#595959\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n}\n\nclass TodosItem extends React.Component {\n    state = {\n        editing: false,\n    }\n    handleUpdatedDone = event => {\n        if (event.key === \"Enter\") {\n            this.setState({ editing: false })\n        }\n    };\n    componentDidMount() {\n        console.log(\"did mount\");\n    }\n    render() {\n        /*\n        return <li className={styles.item}>\n            <button onClick={() => this.props.deleteTodoProps(this.props.todo.id)}>Delete</button>\n            <div onDoubleClick={this.handleEditing}>...</div>\n            <input type=\"checkbox\" checked={this.props.todo.completed}\n                onChange={() => this.props.handleChangeProps(this.props.todo.id)} />\n            <span style={this.props.todo.completed ? completedStyle : null}>\n                {this.props.todo.title}\n            </span>\n        </li>*/\n        let viewMode = {}\n        let editMode = {}\n\n        if (this.state.editing) {\n            viewMode.display = \"none\"\n        } else {\n            editMode.display = \"none\"\n        }\n        return (\n            <li className={styles.item}>\n                <div onDoubleClick={this.handleEditing}>\n                    <input type=\"checkbox\" checked={this.props.todo.completed}\n                        onChange={() => this.props.handleChangeProps(this.props.todo.id)} />\n\n                    <input\n                        type=\"text\"\n                        style={editMode}\n                        className={styles.textInput}\n                        value={this.props.todo.title}\n                        onChange={e => {\n                            this.props.setUpdate(e.target.value, this.props.todo.id)\n                        }}\n                        onKeyDown={this.handleUpdatedDone}\n                    />\n                    <span style={this.props.todo.completed ? completedStyle : null}>\n                        {this.props.todo.title}\n                    </span>\n                    <button onClick={() => this.props.deleteTodoProps(this.props.todo.id)}>Delete</button>\n                </div>\n            </li>)\n    }\n    handleEditing = () => {\n        this.setState({\n            editing: true,\n        });\n        console.log(\"dc\");\n    }\n}\nexport default TodosItem","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass TodosList extends React.Component {\n\n    render() {\n        return (\n            <ul>\n                {this.props.todos.map(todo => (\n                    <TodoItem key={todo.id}\n                        todo={todo}\n                        handleChangeProps={this.props.handleChangeProps}\n                        deleteTodoProps={this.props.deleteTodoProps}\n                        setUpdate={this.props.setUpdate}\n                    />\n                ))}\n            </ul>\n        )\n    }\n}\nexport default TodosList","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport TodosList from \"./TodosList\";\n\nclass TodoContainer extends React.Component {\n    state = {\n        todos: [\n        ]\n    };\n    handleChange = (id) => {\n        this.setState(prevState => ({\n            todos: prevState.todos.map(todo => {\n                if (todo.id === id) {\n                    return {\n                        ...todo,\n                        completed: !todo.completed,\n                    }\n                }\n                return todo\n            }),\n        }))\n    };\n    delTodo = id => {\n        this.setState({\n            todos: [\n                ...this.state.todos.filter(todo => {\n                    return todo.id !== id;\n                })\n            ]\n        });\n    };\n    addTodoItem = title => {\n        const newTodo = {\n            id: uuidv4(),\n            title: title,\n            completed: false\n        };\n        this.setState({\n            todos: [...this.state.todos, newTodo]\n        });\n    };\n    setUpdate = (updatedTitle, id) => {\n        this.setState({\n            todos: this.state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.title = updatedTitle\n                }\n                return todo\n            }),\n        })\n    };\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/todos\")\n            .then(response => response.json())\n            //.then(data => console.log(data))\n            .then(data => this.setState({ todos: data }));\n    };\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"inner\">\n                    <Header />\n                    <InputTodo addTodoProps={this.addTodoItem} />\n                    <TodosList\n                        todos={this.state.todos}\n                        handleChangeProps={this.handleChange}\n                        deleteTodoProps={this.delTodo}\n                        setUpdate={this.setUpdate}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\nexport default TodoContainer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./functionBased/App.css\"\n//component file\nimport TodoContainer from \"./functionBased/components/TodoContainer\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <TodoContainer />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}